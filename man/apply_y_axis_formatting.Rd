% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_y_axis_formatting.R
\name{apply_y_axis_formatting}
\alias{apply_y_axis_formatting}
\title{Apply Y-Axis Formatting to SPC Plot}
\usage{
apply_y_axis_formatting(plot, y_axis_unit = "count", qic_data = NULL)
}
\arguments{
\item{plot}{ggplot object to format}

\item{y_axis_unit}{Unit type: "percent", "count", "rate", or "time"}

\item{qic_data}{QIC data frame (required for time unit context)}
}
\value{
Modified ggplot object with appropriate y-axis scale
}
\description{
Applies unit-specific Y-axis formatting to an SPC ggplot object.
Supports percentage, count, rate, and time units with Danish formatting.
}
\details{
\strong{Unit Types:}
\itemize{
\item \strong{percent}: Percentage values (0-100\%) with \% suffix
\item \strong{count}: Integers with intelligent K/M/mia. notation
\item \strong{rate}: Decimal values with comma notation
\item \strong{time}: Context-aware minutes/hours/days formatting
}

\strong{Danish Formatting:}
\itemize{
\item Decimal mark: \verb{,} (e.g., "12,5")
\item Thousand separator: \code{.} (e.g., "1.250")
}
}
\examples{
\dontrun{
library(ggplot2)

count_data <- data.frame(
  x = seq.Date(as.Date("2024-01-01"), by = "month", length.out = 12),
  y = seq(5, 16, length.out = 12)
)

percent_data <- data.frame(
  x = count_data$x,
  y = seq(0.05, 0.25, length.out = 12)
)

count_plot <- ggplot(count_data, aes(x = x, y = y)) +
  geom_line()

# Apply percentage formatting
percent_plot <- ggplot(percent_data, aes(x = x, y = y)) +
  geom_line()
apply_y_axis_formatting(percent_plot, "percent", percent_data)

# Apply count formatting
apply_y_axis_formatting(count_plot, "count", count_data)
}
}
\seealso{
\code{\link[=format_y_value]{format_y_value()}}, \code{\link[=get_optimal_formatting]{get_optimal_formatting()}}

Other spc-formatting: 
\code{\link{format_y_value}()}
}
\concept{spc-formatting}
